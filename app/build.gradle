apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.github.triplet.play'
apply plugin: 'com.getkeepsafe.dexcount'
apply from: 'cliqz.gradle'

def useGoogleServices = System.getenv("DISABLE_GOOGLE_SERVICES") == null

android {
    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        versionCode 1
        versionName "1.8.4"
        multiDexEnabled true

        buildConfigField 'String', 'LIGHTNING_VERSION_NAME', '"4.2.3.1"'
        buildConfigField "int", "MINIMUM_WEBVIEW_VERSION", "55"
        buildConfigField 'int', "VISIBLE_TOP_SITES", '4'
        
        applicationId "com.cliqz.browser"
        testInstrumentationRunner "com.cliqz.browser.test.CustomTestRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            shrinkResources false
            proguardFiles 'proguard-project.txt'
            versionNameSuffix '-debug'
        }

        release {
            minifyEnabled false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            shrinkResources false
            proguardFiles 'proguard-project.txt'
        }
    }
    packagingOptions {
        exclude '.readme'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude "lib/armeabi/**"
    }
    sourceSets {
        main {
            assets.srcDirs += [
                    "${rootDir}/jsengine"
            ]
        }
        amazon {
            java.srcDirs += [
                    'src/cliqz/java',
            ]
            res.srcDirs += [
                    'src/cliqz/res',
            ]
        }
//        huawei {
//            java.srcDirs += [
//                    'src/cliqz/java',
//            ]
//            res.srcDirs += [
//                    'src/cliqz/res',
//            ]
//        }
    }

    flavorDimensions "api"
    productFlavors {
        cliqz {
            dimension "api"
            versionCode 5
        }
        lumen {
            dimension "api"
            applicationId "com.cliqz.lumen"
            versionCode 6
            buildConfigField 'int', "VISIBLE_TOP_SITES", '8'
            useGoogleServices = false
        }
        amazon {
            dimension "api"
            versionCode 8
        }
//        huawei {
//            dimension "api"
//            versionCode 5
//            applicationIdSuffix ".huawei"
//        }
    }

    splits {
        abi {
            enable true
            reset()
            include "x86", "armeabi-v7a", "arm64-v8a", "x86_64"
            universalApk false
        }
    }
}

dexcount {
    includeClasses = false
    includeFieldCount = false
    format = "tree"
    orderByMethodCount = true
    verbose = false
}

repositories {
    jcenter()
    maven {
        url "https://maven.google.com"
    }
}

configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.name == 'android-jsc') {
                details.useTarget group: details.requested.group, name: 'android-jsc-intl', version: 'r236355'
            }
        }
        force "com.google.code.findbugs:jsr305:3.0.0"
    }
}

dependencies {

    // support libraries
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'

    // event bus
    implementation 'com.cliqz:nove:0.3.0'
    kapt 'com.cliqz:nove-compiler:0.3.0'

    // dependency injection
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'com.google.dagger:dagger:2.11'
    implementation 'com.google.dagger:dagger-android-support:2.11'
    kapt 'com.google.dagger:dagger-compiler:2.11'
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // view binding
    kapt "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"
    implementation "com.jakewharton:butterknife:${butterKnifeVersion}"

    // native fs support for React-Native
    implementation project(':react-native-fs')

    // sqlite support for React-Native
    implementation project(':react-native-sqlite2')
    implementation project(':WebRTCModule')

    // react native screenshot view
    implementation project(':react-native-view-shot')

    // react native share card
    implementation project(':react-native-share')

    // user agent
    implementation project(':react-native-user-agent-react-native-user-agent')

    // Utils libraries
    implementation project(':utils')
    implementation project(':android_utils')

    // On-boarding
    cliqzImplementation 'com.github.deano2390:MaterialShowcaseView:1.2.0@aar'
    amazonImplementation 'com.github.deano2390:MaterialShowcaseView:1.2.0@aar'

    // memory leak analysis
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    androidTestImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'

    // Google Play Services
    implementation 'com.google.android.gms:play-services-gcm:16.1.0'

    // React-Native
    implementation "com.facebook.react:react-native:${reactNativeVersion}"

    // AWS SNS SDK
    implementation 'com.amazonaws:aws-android-sdk-sns:2.13.2'
    implementation 'com.amazonaws:aws-android-sdk-cognito:2.13.2'

    // Barcode scanner
    implementation 'com.google.zxing:core:3.3.0'

    // Fresco
    implementation 'com.facebook.fresco:fresco:1.4.0'

    // MiniBloomFilter
    implementation 'com.github.cliqz-oss:minibloomfilter:1.0'

    // Ghostery chart support
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'

    // RevenueCat for subscription
    lumenImplementation 'com.revenuecat.purchases:purchases:2.1.2'

    // vpn module
    lumenImplementation 'com.cliqz:com.cliqz.vpnlib:1.0.1'

    // Testing-only dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'org.eclipse.jetty:jetty-server:9.2.17.v20160517'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.apache.velocity:velocity:1.7'
    androidTestImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'

    // Sentry
    implementation 'io.sentry:sentry-android:1.7.21'
    // Forcing version
    androidTestImplementation 'androidx.annotation:annotation:1.0.0'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.1.0'
    androidTestImplementation 'org.eclipse.jetty:jetty-server:9.2.17.v20160517'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
    testImplementation 'org.apache.velocity:velocity:1.7'
}

play {
    track = 'alpha'
}
if (useGoogleServices) {
    apply plugin: 'com.google.gms.google-services'
}

apply plugin: com.cliqz.gradle.CliqzPlugin